// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace YourAnimeList.Migrations
{
    [DbContext(typeof(AnimeLists))]
    partial class AnimeListsModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("YourAnimeList.AnimeCharacters", b =>
                {
                    b.Property<int>("AnimeCharactersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AnimeCharactersName")
                        .HasColumnType("TEXT");

                    b.Property<int>("AnimeListId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AnimeCharactersId");

                    b.HasIndex("AnimeListId");

                    b.ToTable("AnimeCharacters");
                });

            modelBuilder.Entity("YourAnimeList.AnimeList", b =>
                {
                    b.Property<int>("AnimeListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AnimeName")
                        .HasColumnType("TEXT");

                    b.Property<int>("AnimeRank")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnimeRating")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AnimeSynopsis")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAnimeOnList")
                        .HasColumnType("INTEGER");

                    b.HasKey("AnimeListId");

                    b.ToTable("AnimeList");
                });

            modelBuilder.Entity("YourAnimeList.VA", b =>
                {
                    b.Property<int>("VAId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnimeListId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("VAName")
                        .HasColumnType("TEXT");

                    b.HasKey("VAId");

                    b.HasIndex("AnimeListId");

                    b.ToTable("VA");
                });

            modelBuilder.Entity("YourAnimeList.AnimeCharacters", b =>
                {
                    b.HasOne("YourAnimeList.AnimeList", null)
                        .WithMany("AnimeCharacters")
                        .HasForeignKey("AnimeListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YourAnimeList.VA", b =>
                {
                    b.HasOne("YourAnimeList.AnimeList", null)
                        .WithMany("AnimeVoiceActors")
                        .HasForeignKey("AnimeListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YourAnimeList.AnimeList", b =>
                {
                    b.Navigation("AnimeCharacters");

                    b.Navigation("AnimeVoiceActors");
                });
#pragma warning restore 612, 618
        }
    }
}
